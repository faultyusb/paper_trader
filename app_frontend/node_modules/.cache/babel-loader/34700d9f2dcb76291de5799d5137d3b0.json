{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\home_page\\\\StockInfo\\\\StockInfo.js\";\nimport React from 'react';\nimport StockGraph from '../StockGraph/StockGraph.js';\nimport StockTable from '../StockTable/StockTable.js';\nimport StockMeta from '../StockMeta/StockMeta.js';\nimport Purchase from '../Purchase/Purchase.js';\nimport './StockInfo.css';\nexport default class StockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.state = {\n      width: 0,\n      height: 0,\n      meta_data: {\n        stock_info: \"-\",\n        symbol: \"-\",\n        refreshed: \"-\",\n        time_zone: \"-\"\n      },\n      shares: 0,\n      stocks: [] //   {\n      //     date: new Date(),\n      //     open: 0,\n      //     high: 0,\n      //     low: 0,\n      //     close: 0,\n      //     volume: 0\n      //   },\n      //   {\n      //     date: new Date(), \n      //     open: 0,\n      //     high: 0,\n      //     low: 0,\n      //     close: 0,\n      //     volume: 0\n      //   },\n      // ]\n\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.fetchStocks();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.symbol !== prevProps.symbol) {\n      this.setState({\n        stocks: [{\n          date: new Date(\"2020-07-08\"),\n          open: 0,\n          high: 0,\n          low: 0,\n          close: 0,\n          volume: 0\n        }, {\n          date: new Date(\"2020-07-07\"),\n          open: 0,\n          high: 0,\n          low: 0,\n          close: 0,\n          volume: 0\n        }]\n      });\n      this.fetchStocks();\n    }\n  }\n\n  fetchStocks() {\n    const SYMBOL = this.props.symbol;\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\n    const FUNCTION_TYPE = 'Time Series (Daily)';\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${SYMBOL}&outputsize='compact'&apikey=${API_KEY}`;\n    fetch(API).then(response => response.json()).then(data => {\n      const meta_data = data[\"Meta Data\"];\n      this.setState({\n        meta_data: {\n          stock_info: meta_data[\"1. Information\"],\n          symbol: meta_data[\"2. Symbol\"],\n          refreshed: meta_data[\"3. Last Refreshed\"],\n          time_zone: meta_data[\"5. Time Zone\"]\n        }\n      });\n\n      for (var key in data['Time Series (Daily)']) {\n        let temp = {};\n        temp['date'] = new Date(key);\n        temp['open'] = data[FUNCTION_TYPE][key]['1. open'];\n        temp['high'] = data[FUNCTION_TYPE][key]['2. high'];\n        temp['low'] = data[FUNCTION_TYPE][key]['3. low'];\n        temp['close'] = data[FUNCTION_TYPE][key]['4. close'];\n        temp['volume'] = data[FUNCTION_TYPE][key]['5. volume'];\n        let joined = this.state.stocks.concat(temp);\n        this.setState({\n          stocks: joined\n        });\n      }\n    }).catch(err => console.log(err)).then(() => {\n      this.setState({\n        stocks: this.state.stocks.reverse()\n      });\n    });\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    console.log(event.target.value);\n    this.setState({\n      shares: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__elements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StockGraph, {\n      width: this.state.width,\n      data: this.state.stocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all_stock__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meta_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StockMeta, {\n      meta_info: this.state.meta_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__table2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StockTable, {\n      latestStock: this.state.stocks[99] || this.state.stocks[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"purchase__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"purchase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Purchase, {\n      amount: this.state.shares,\n      symbol: this.state.meta_data.symbol,\n      price: this.state.stocks[99] || this.state.stocks[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/home_page/StockInfo/StockInfo.js"],"names":["React","StockGraph","StockTable","StockMeta","Purchase","StockInfo","Component","constructor","props","updateWindowDimensions","bind","state","width","height","meta_data","stock_info","symbol","refreshed","time_zone","shares","stocks","componentDidMount","window","addEventListener","fetchStocks","componentWillUnmount","removeEventListener","setState","innerWidth","innerHeight","componentDidUpdate","prevProps","date","Date","open","high","low","close","volume","SYMBOL","API_KEY","FUNCTION_TYPE","API","fetch","then","response","json","data","key","temp","joined","concat","catch","err","console","log","reverse","onSubmitHandler","event","preventDefault","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport StockGraph from '../StockGraph/StockGraph.js';\r\nimport StockTable from '../StockTable/StockTable.js';\r\nimport StockMeta from '../StockMeta/StockMeta.js';\r\nimport Purchase from '../Purchase/Purchase.js';\r\n\r\nimport './StockInfo.css';\r\n\r\nexport default class StockInfo extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n\r\n    this.state = \r\n      {\r\n        width: 0,\r\n        height: 0,\r\n        meta_data: \r\n        {\r\n          stock_info: \"-\",\r\n          symbol: \"-\",\r\n          refreshed: \"-\",\r\n          time_zone: \"-\"\r\n        },\r\n      shares: 0,\r\n      stocks: []\r\n    //   {\r\n    //     date: new Date(),\r\n    //     open: 0,\r\n    //     high: 0,\r\n    //     low: 0,\r\n    //     close: 0,\r\n    //     volume: 0\r\n    //   },\r\n    //   {\r\n    //     date: new Date(), \r\n    //     open: 0,\r\n    //     high: 0,\r\n    //     low: 0,\r\n    //     close: 0,\r\n    //     volume: 0\r\n    //   },\r\n    // ]\r\n  };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    this.fetchStocks();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.symbol !== prevProps.symbol){\r\n      this.setState({stocks: [\r\n        {\r\n          date: new Date(\"2020-07-08\"),\r\n          open: 0,\r\n          high: 0,\r\n          low: 0,\r\n          close: 0,\r\n          volume: 0\r\n        },\r\n        {\r\n          date: new Date(\"2020-07-07\"), \r\n          open: 0,\r\n          high: 0,\r\n          low: 0,\r\n          close: 0,\r\n          volume: 0\r\n        },\r\n      ]})\r\n      this.fetchStocks();\r\n    }\r\n  }\r\n\r\n  fetchStocks(){\r\n    const SYMBOL = this.props.symbol;\r\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\r\n    const FUNCTION_TYPE = 'Time Series (Daily)';\r\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${SYMBOL}&outputsize='compact'&apikey=${API_KEY}`;\r\n\r\n    fetch(API)\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        const meta_data = data[\"Meta Data\"];\r\n        this.setState({\r\n          meta_data: {\r\n            stock_info: meta_data[\"1. Information\"],\r\n            symbol: meta_data[\"2. Symbol\"],\r\n            refreshed: meta_data[\"3. Last Refreshed\"],\r\n            time_zone: meta_data[\"5. Time Zone\"]\r\n          }\r\n        });\r\n\r\n        for (var key in data['Time Series (Daily)']){\r\n          let temp = {};\r\n          temp['date'] = new Date(key);\r\n          temp['open'] = (data[FUNCTION_TYPE][key]['1. open']);\r\n          temp['high'] = (data[FUNCTION_TYPE][key]['2. high']);\r\n          temp['low'] = (data[FUNCTION_TYPE][key]['3. low']);\r\n          temp['close'] = (data[FUNCTION_TYPE][key]['4. close']);\r\n          temp['volume'] = (data[FUNCTION_TYPE][key]['5. volume']);\r\n\r\n          let joined = this.state.stocks.concat(temp);\r\n          this.setState({stocks: joined});\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n        .then(()=>{\r\n          this.setState({stocks: this.state.stocks.reverse()});\r\n        }); \r\n\r\n  }\r\n  onSubmitHandler(event){\r\n    event.preventDefault();\r\n    console.log(event.target.value);\r\n    this.setState({shares: event.target.value})\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"stock__elements\">\r\n        <div className=\"stock__graph\">\r\n          <StockGraph width = {this.state.width} data = {this.state.stocks}/>\r\n        </div>\r\n\r\n        <div className=\"all_stock__info\">\r\n          <div className=\"meta_info\">\r\n            <div className=\"stock__meta\">\r\n              <StockMeta meta_info={this.state.meta_data}/>\r\n            </div>\r\n            <div className=\"stock__table2\">\r\n              <StockTable latestStock={this.state.stocks[99] || this.state.stocks[0] }/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className = \"purchase__container\">\r\n            <div className=\"purchase\">\r\n              <Purchase amount={this.state.shares} symbol={this.state.meta_data.symbol} price={this.state.stocks[99] || this.state.stocks[0]}/>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}