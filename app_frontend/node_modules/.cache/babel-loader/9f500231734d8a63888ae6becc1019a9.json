{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\portfolio\\\\portfolio.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Stock from './Stock';\nimport './portfolio.css';\nexport default class portfolio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      stocks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/updateStocks', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      if (data.errorMessage) {\n        this.setState({\n          error: true\n        });\n      } else {\n        this.setState({\n          stocks: data.stocks\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/SignIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.stocks.length === 0) {\n      return /*#__PURE__*/React.createElement(Stock, {\n        missing: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      });\n    }\n\n    let total_investment = 0;\n    const stock_array = this.state.stocks;\n\n    for (let i = 0; i < stock_array.length; i++) {\n      total_investment += stock_array[i].price * stock_array[i].shares;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolio__\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Initial Investment: $ \", total_investment, \".00\"), this.state.stocks.map(stock => {\n      return /*#__PURE__*/React.createElement(Stock, {\n        symbol: stock.symbol,\n        price: stock.price,\n        volume: stock.volume,\n        shares: stock.shares,\n        init_investment: stock.shares * stock.price,\n        curr_value: stock.shares * stock.asset_value // date={stock.date}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 32\n        }\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/portfolio/portfolio.js"],"names":["React","Redirect","Stock","portfolio","Component","constructor","props","state","error","stocks","componentDidMount","fetch","method","headers","then","response","json","data","errorMessage","setState","render","length","total_investment","stock_array","i","price","shares","map","stock","symbol","volume","asset_value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,iBAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KADE;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFU,KAAlB,CAAL,CAIKC,IAJL,CAIUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJtB,EAKSF,IALT,CAKcG,IAAI,IAAE;AACR,UAAIA,IAAI,CAACC,YAAT,EAAsB;AAClB,aAAKC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAGI;AACA,aAAKW,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAEQ,IAAI,CAACR;AAAf,SAAd;AACH;AACA,KAZb;AAcH;;AAGDW,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKb,KAAL,CAAWC,KAAf,EAAqB;AACjB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,QAAI,KAAKD,KAAL,CAAWE,MAAX,CAAkBY,MAAlB,KAA6B,CAAjC,EAAmC;AAC/B,0BAAO,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,QAAIC,gBAAgB,GAAG,CAAvB;AACA,UAAMC,WAAW,GAAG,KAAKhB,KAAL,CAAWE,MAA/B;;AACA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACF,MAAhC,EAAwCG,CAAC,EAAzC,EAA4C;AACxCF,MAAAA,gBAAgB,IAAIC,WAAW,CAACC,CAAD,CAAX,CAAeC,KAAf,GAAuBF,WAAW,CAACC,CAAD,CAAX,CAAeE,MAA1D;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2BJ,gBAA3B,QADJ,EAGK,KAAKf,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CACGC,KAAK,IAAI;AACL,0BAAO,oBAAC,KAAD;AACK,QAAA,MAAM,EAAEA,KAAK,CAACC,MADnB;AAEK,QAAA,KAAK,EAAED,KAAK,CAACH,KAFlB;AAGK,QAAA,MAAM,EAAEG,KAAK,CAACE,MAHnB;AAIK,QAAA,MAAM,EAAEF,KAAK,CAACF,MAJnB;AAKK,QAAA,eAAe,EAAIE,KAAK,CAACF,MAAN,GAAeE,KAAK,CAACH,KAL7C;AAMK,QAAA,UAAU,EAAIG,KAAK,CAACF,MAAN,GAAeE,KAAK,CAACG,WANxC,CAOK;AAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AASH,KAXJ,CAHL,CADJ;AAmBH;;AA5DiD","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Stock from './Stock';\r\n\r\nimport './portfolio.css';\r\n\r\n\r\nexport default class portfolio extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: false,\r\n            stocks: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/updateStocks', {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n            .then(response => response.json())\r\n                .then(data=>{\r\n                    if (data.errorMessage){\r\n                        this.setState({ error: true });\r\n                    }\r\n                    else{\r\n                        this.setState({ stocks: data.stocks });\r\n                    }\r\n                    });\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.state.error){\r\n            return <Redirect to=\"/SignIn\"/>\r\n        }\r\n        if (this.state.stocks.length === 0){\r\n            return <Stock missing={true} />;\r\n        }\r\n        \r\n        let total_investment = 0;\r\n        const stock_array = this.state.stocks;\r\n        for (let i = 0; i < stock_array.length; i++){\r\n            total_investment += stock_array[i].price * stock_array[i].shares;\r\n        }\r\n\r\n        return (\r\n            <div className=\"portfolio__\">\r\n                <h1>Initial Investment: $ {total_investment}.00</h1>\r\n\r\n                {this.state.stocks.map(\r\n                    stock => {\r\n                        return <Stock \r\n                                    symbol={stock.symbol}\r\n                                    price={stock.price}\r\n                                    volume={stock.volume}\r\n                                    shares={stock.shares}\r\n                                    init_investment = {stock.shares * stock.price}\r\n                                    curr_value = {stock.shares * stock.asset_value}\r\n                                    // date={stock.date}\r\n                                />\r\n                    }\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}