{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\home_page\\\\StockInfo\\\\StockInfo.js\";\nimport React from 'react';\nimport StockGraph from '../StockGraph/StockGraph.js';\nimport StockTable from '../StockTable/StockTable.js';\nimport StockMeta from '../StockMeta/StockMeta.js';\nimport Purchase from '../Purchase/Purchase.js';\nimport './StockInfo.css';\nexport default class StockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meta_data: {\n        stock_info: \"-\",\n        symbol: \"-\",\n        refreshed: \"-\",\n        time_zone: \"-\"\n      },\n      shares: 0,\n      stocks: [{\n        date: new Date(),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: 0,\n        volume: 0\n      }, {\n        date: new Date(),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: 0,\n        volume: 0\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStocks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.symbol !== prevProps.symbol) {\n      this.setState({\n        stocks: [{\n          date: new Date(\"2020-07-08\"),\n          open: 0,\n          high: 0,\n          low: 0,\n          close: 0,\n          volume: 0\n        }, {\n          date: new Date(\"2020-07-07\"),\n          open: 0,\n          high: 0,\n          low: 0,\n          close: 0,\n          volume: 0\n        }]\n      });\n      this.fetchStocks();\n    }\n  }\n\n  fetchStocks() {\n    const SYMBOL = this.props.symbol;\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\n    const FUNCTION_TYPE = 'Time Series (Daily)';\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${SYMBOL}&outputsize='compact'&apikey=${API_KEY}`;\n    fetch(API).then(response => response.json()).then(data => {\n      const meta_data = data[\"Meta Data\"];\n      this.setState({\n        meta_data: {\n          stock_info: meta_data[\"1. Information\"],\n          symbol: meta_data[\"2. Symbol\"],\n          refreshed: meta_data[\"3. Last Refreshed\"],\n          time_zone: meta_data[\"5. Time Zone\"]\n        }\n      });\n\n      for (var key in data['Time Series (Daily)']) {\n        let temp = {};\n        temp['date'] = new Date(key);\n        temp['open'] = parseInt(data[FUNCTION_TYPE][key]['1. open']);\n        temp['high'] = parseInt(data[FUNCTION_TYPE][key]['2. high']);\n        temp['low'] = parseInt(data[FUNCTION_TYPE][key]['3. low']);\n        temp['close'] = parseInt(data[FUNCTION_TYPE][key]['4. close']);\n        temp['volume'] = parseInt(data[FUNCTION_TYPE][key]['5. volume']);\n        let joined = this.state.stocks.concat(temp);\n        this.setState({\n          stocks: joined\n        });\n      }\n    }).catch(err => console.log(err)).then(() => {\n      this.setState({\n        stocks: this.state.stocks.reverse()\n      });\n    });\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    console.log(event.target.value);\n    this.setState({\n      shares: event.target.value\n    }); //this.setState({shares: event.target.value});\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__elements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StockGraph, {\n      data: this.state.stocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all_stock__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"meta_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StockMeta, {\n      meta_info: this.state.meta_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__table2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StockTable, {\n      latestStock: this.state.stocks[99] || this.state.stocks[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"purchase__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"purchase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Purchase, {\n      amount: this.state.shares,\n      symbol: this.state.meta_data.symbol,\n      price: this.state.stocks[99].close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/home_page/StockInfo/StockInfo.js"],"names":["React","StockGraph","StockTable","StockMeta","Purchase","StockInfo","Component","constructor","props","state","meta_data","stock_info","symbol","refreshed","time_zone","shares","stocks","date","Date","open","high","low","close","volume","componentDidMount","fetchStocks","componentDidUpdate","prevProps","setState","SYMBOL","API_KEY","FUNCTION_TYPE","API","fetch","then","response","json","data","key","temp","parseInt","joined","concat","catch","err","console","log","reverse","onSubmitHandler","event","preventDefault","target","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport StockGraph from '../StockGraph/StockGraph.js';\r\nimport StockTable from '../StockTable/StockTable.js';\r\nimport StockMeta from '../StockMeta/StockMeta.js';\r\nimport Purchase from '../Purchase/Purchase.js';\r\n\r\nimport './StockInfo.css';\r\n\r\nexport default class StockInfo extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = \r\n      {meta_data: \r\n        {\r\n          stock_info: \"-\",\r\n          symbol: \"-\",\r\n          refreshed: \"-\",\r\n          time_zone: \"-\"\r\n        },\r\n      shares: 0,\r\n      stocks: [\r\n      {\r\n        date: new Date(),\r\n        open: 0,\r\n        high: 0,\r\n        low: 0,\r\n        close: 0,\r\n        volume: 0\r\n      },\r\n      {\r\n        date: new Date(), \r\n        open: 0,\r\n        high: 0,\r\n        low: 0,\r\n        close: 0,\r\n        volume: 0\r\n      },\r\n    ]};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchStocks();\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.symbol !== prevProps.symbol){\r\n      this.setState({stocks: [\r\n        {\r\n          date: new Date(\"2020-07-08\"),\r\n          open: 0,\r\n          high: 0,\r\n          low: 0,\r\n          close: 0,\r\n          volume: 0\r\n        },\r\n        {\r\n          date: new Date(\"2020-07-07\"), \r\n          open: 0,\r\n          high: 0,\r\n          low: 0,\r\n          close: 0,\r\n          volume: 0\r\n        },\r\n      ]})\r\n      this.fetchStocks();\r\n    }\r\n  }\r\n\r\n  fetchStocks(){\r\n    const SYMBOL = this.props.symbol;\r\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\r\n    const FUNCTION_TYPE = 'Time Series (Daily)';\r\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${SYMBOL}&outputsize='compact'&apikey=${API_KEY}`;\r\n\r\n    fetch(API)\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        const meta_data = data[\"Meta Data\"];\r\n        this.setState({\r\n          meta_data: {\r\n            stock_info: meta_data[\"1. Information\"],\r\n            symbol: meta_data[\"2. Symbol\"],\r\n            refreshed: meta_data[\"3. Last Refreshed\"],\r\n            time_zone: meta_data[\"5. Time Zone\"]\r\n          }\r\n        });\r\n\r\n        for (var key in data['Time Series (Daily)']){\r\n          let temp = {};\r\n          temp['date'] = new Date(key);\r\n          temp['open'] = parseInt(data[FUNCTION_TYPE][key]['1. open']);\r\n          temp['high'] = parseInt(data[FUNCTION_TYPE][key]['2. high']);\r\n          temp['low'] = parseInt(data[FUNCTION_TYPE][key]['3. low']);\r\n          temp['close'] = parseInt(data[FUNCTION_TYPE][key]['4. close']);\r\n          temp['volume'] = parseInt(data[FUNCTION_TYPE][key]['5. volume']);\r\n\r\n          let joined = this.state.stocks.concat(temp);\r\n          this.setState({stocks: joined});\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n        .then(()=>{\r\n          this.setState({stocks: this.state.stocks.reverse()});\r\n        }); \r\n\r\n  }\r\n  onSubmitHandler(event){\r\n    event.preventDefault();\r\n    console.log(event.target.value);\r\n    this.setState({shares: event.target.value})\r\n    //this.setState({shares: event.target.value});\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"stock__elements\">\r\n        <div className=\"stock__graph\">\r\n          <StockGraph data = {this.state.stocks}/>\r\n        </div>\r\n        <div className=\"all_stock__info\">\r\n          <div className=\"meta_info\">\r\n            <div className=\"stock__meta\">\r\n              <StockMeta meta_info={this.state.meta_data}/>\r\n            </div>\r\n            <div className=\"stock__table2\">\r\n              <StockTable latestStock={this.state.stocks[99] || this.state.stocks[0] }/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className = \"purchase__container\">\r\n            <div className=\"purchase\">\r\n              <Purchase amount={this.state.shares} symbol={this.state.meta_data.symbol} price={this.state.stocks[99].close}/>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}