{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\home_page\\\\StockInfo.js\";\nimport React from 'react';\nimport StockGraph from './StockGraph.js';\nimport StockTable from './StockTable.js';\nimport './StockInfo.css';\nexport default class StockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: [{\n        date: new Date(\"2020-07-08\"),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: 0,\n        volume: 0\n      }, {\n        date: new Date(\"2020-07-07\"),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: 0,\n        volume: 0\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStocks();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.symbol !== prevProps.symbol) {\n      this.setState({\n        stocks: [{\n          date: new Date(\"2020-07-08\"),\n          open: 0,\n          high: 0,\n          low: 0,\n          close: 0,\n          volume: 0\n        }, {\n          date: new Date(\"2020-07-07\"),\n          open: 0,\n          high: 0,\n          low: 0,\n          close: 0,\n          volume: 0\n        }]\n      });\n      this.fetchStocks();\n    }\n  }\n\n  fetchStocks() {\n    const symbol = this.props.symbol;\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\n    const OUTPT_SIZE_FULL = 0 ? 'full' : 'compact';\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=${OUTPT_SIZE_FULL}&apikey=${API_KEY}`;\n    fetch(API).then(response => response.json()).then(data => {\n      for (var key in data['Time Series (Daily)']) {\n        let temp = {};\n        temp['date'] = new Date(key);\n        temp['open'] = parseInt(data['Time Series (Daily)'][key]['1. open']);\n        temp['high'] = parseInt(data['Time Series (Daily)'][key]['2. high']);\n        temp['low'] = parseInt(data['Time Series (Daily)'][key]['3. low']);\n        temp['close'] = parseInt(data['Time Series (Daily)'][key]['4. close']);\n        temp['volume'] = parseInt(data['Time Series (Daily)'][key]['5. volume']);\n        let joined = this.state.stocks.concat(temp);\n        this.setState({\n          stocks: joined\n        });\n      }\n    }).then(() => {\n      this.setState({\n        stocks: this.state.stocks.reverse()\n      });\n      console.log(this.state.stocks[99]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__elements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StockGraph, {\n      data: this.state.stocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stock__table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StockTable, {\n      latestStock: this.state.stocks[99],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/home_page/StockInfo.js"],"names":["React","StockGraph","StockTable","StockInfo","Component","constructor","props","state","stocks","date","Date","open","high","low","close","volume","componentDidMount","fetchStocks","componentDidUpdate","prevProps","symbol","setState","API_KEY","OUTPT_SIZE_FULL","API","fetch","then","response","json","data","key","temp","parseInt","joined","concat","reverse","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport StockGraph from './StockGraph.js';\r\nimport StockTable from './StockTable.js';\r\nimport './StockInfo.css';\r\n\r\nexport default class StockInfo extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {stocks: [\r\n      {\r\n        date: new Date(\"2020-07-08\"),\r\n        open: 0,\r\n        high: 0,\r\n        low: 0,\r\n        close: 0,\r\n        volume: 0\r\n      },\r\n      {\r\n        date: new Date(\"2020-07-07\"), \r\n        open: 0,\r\n        high: 0,\r\n        low: 0,\r\n        close: 0,\r\n        volume: 0\r\n      },\r\n    ]};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchStocks();\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(this.props.symbol !== prevProps.symbol){\r\n      this.setState({stocks: [\r\n        {\r\n          date: new Date(\"2020-07-08\"),\r\n          open: 0,\r\n          high: 0,\r\n          low: 0,\r\n          close: 0,\r\n          volume: 0\r\n        },\r\n        {\r\n          date: new Date(\"2020-07-07\"), \r\n          open: 0,\r\n          high: 0,\r\n          low: 0,\r\n          close: 0,\r\n          volume: 0\r\n        },\r\n      ]})\r\n      this.fetchStocks();\r\n    }\r\n  }\r\n\r\n  fetchStocks(){\r\n    const symbol = this.props.symbol;\r\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\r\n    const OUTPT_SIZE_FULL = 0 ? 'full' :'compact';\r\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=${OUTPT_SIZE_FULL}&apikey=${API_KEY}`;\r\n\r\n    fetch(API)\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        for (var key in data['Time Series (Daily)']){\r\n          let temp = {};\r\n          temp['date'] = new Date(key);\r\n          temp['open'] = parseInt(data['Time Series (Daily)'][key]['1. open']);\r\n          temp['high'] = parseInt(data['Time Series (Daily)'][key]['2. high']);\r\n          temp['low'] = parseInt(data['Time Series (Daily)'][key]['3. low']);\r\n          temp['close'] = parseInt(data['Time Series (Daily)'][key]['4. close']);\r\n          temp['volume'] = parseInt(data['Time Series (Daily)'][key]['5. volume']);\r\n\r\n          let joined = this.state.stocks.concat(temp);\r\n          this.setState({stocks: joined});\r\n        }\r\n      })\r\n        .then(()=>{\r\n          this.setState({stocks: this.state.stocks.reverse()});\r\n          console.log(this.state.stocks[99]);\r\n        }); \r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"stock__elements\">\r\n        <div className=\"stock__graph\">\r\n          <StockGraph data = {this.state.stocks}/>\r\n        </div>\r\n        <div className=\"stock__table\">\r\n          < StockTable latestStock={this.state.stocks[99]}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}