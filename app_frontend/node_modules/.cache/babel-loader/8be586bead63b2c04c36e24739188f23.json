{"ast":null,"code":"import _classCallCheck from\"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import Button from'react-bootstrap/Button';import Stock from'./Stock';import'./portfolio.css';var portfolio=/*#__PURE__*/function(_React$Component){_inherits(portfolio,_React$Component);var _super=_createSuper(portfolio);function portfolio(props){var _this;_classCallCheck(this,portfolio);_this=_super.call(this,props);_this.onSubmitHandler=_this.onSubmitHandler.bind(_assertThisInitialized(_this));_this.state={notLoggedIn:true,stocks:[],wallet:0,stocksSold:0};return _this;}_createClass(portfolio,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('/updateStocks',{method:'GET',headers:{'Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(data){// user is logged in\nif(!data.errorMessage){_this2.setState({notLoggedIn:false,stocks:data.stocks,wallet:data.wallet,stocksSold:data.stocksSold});}});}},{key:\"onSubmitHandler\",value:function onSubmitHandler(){this.setState({stocks:[],wallet:0,stocksSold:0});fetch('/resetPort').then(function(response){return response.json();}).then(function(data){if(data.errorMessage){console.log(data.errorMessage);}});}},{key:\"render\",value:function render(){if(this.state.notLoggedIn){return/*#__PURE__*/React.createElement(Stock,{isLoggedIn:this.state.notLoggedIn});}var total_investment=0;var current_value=0;var stock_array=this.state.stocks;for(var i=0;i<stock_array.length;i++){total_investment+=stock_array[i].price*stock_array[i].shares;current_value+=stock_array[i].asset_value*stock_array[i].shares;}return/*#__PURE__*/React.createElement(\"div\",{className:\"portfolio__\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header_stats\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"meta\"},\"Initial Investment:\"),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"data\"},\"$ \",total_investment.toFixed(2))),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"meta\"},\"Current Value of Assets:\"),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"data\"},\"$ \",current_value.toFixed(2))),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"meta\"},\"Value of Sold Stocks: \"),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"data\"},\"$ \",this.state.stocksSold.toFixed(2))),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"meta\"},\"Wallet Value: \"),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"data\"},\"$ \",this.state.wallet.toFixed(2)))),/*#__PURE__*/React.createElement(\"div\",{className:\"reset_btn\"},/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"outline-secondary\",onClick:this.onSubmitHandler},\"Reset Portfolio\"),' ')),/*#__PURE__*/React.createElement(\"div\",{className:\"stocks__\"},this.state.stocks.length!==0?this.state.stocks.map(function(stock){return/*#__PURE__*/React.createElement(Stock,{symbol:stock.symbol,price:stock.price,volume:stock.volume,shares:stock.shares,init_investment:stock.shares*stock.price,curr_value:stock.shares*stock.asset_value,date:stock.date.toString()});}):/*#__PURE__*/React.createElement(Stock,{missing:true})));}}]);return portfolio;}(React.Component);export{portfolio as default};","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/app_frontend/src/portfolio/portfolio.js"],"names":["React","Button","Stock","portfolio","props","onSubmitHandler","bind","state","notLoggedIn","stocks","wallet","stocksSold","fetch","method","headers","then","response","json","data","errorMessage","setState","console","log","total_investment","current_value","stock_array","i","length","price","shares","asset_value","toFixed","map","stock","symbol","volume","date","toString","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Stock from './Stock';\r\n\r\nimport './portfolio.css';\r\n\r\n\r\nexport default class portfolio extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.state = {\r\n            notLoggedIn: true,\r\n            stocks: [],\r\n            wallet : 0,\r\n            stocksSold: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/updateStocks', {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n            .then(response => response.json())\r\n                .then(data=>{\r\n                    // user is logged in\r\n                    if (!data.errorMessage){\r\n                        this.setState(\r\n                            {notLoggedIn: false,\r\n                            stocks: data.stocks,\r\n                            wallet: data.wallet,\r\n                            stocksSold: data.stocksSold\r\n                        \r\n                        });\r\n                    }\r\n                    });\r\n\r\n    }\r\n\r\n    onSubmitHandler(){\r\n        this.setState({\r\n            stocks: [],\r\n            wallet: 0,\r\n            stocksSold: 0\r\n        });\r\n\r\n        fetch('/resetPort')\r\n            .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.errorMessage){\r\n                        console.log(data.errorMessage);\r\n                    }\r\n                });\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.state.notLoggedIn){\r\n            return <Stock isLoggedIn = {this.state.notLoggedIn} />\r\n        }\r\n\r\n        let total_investment = 0;\r\n        let current_value = 0;\r\n        const stock_array = this.state.stocks;\r\n        for (let i = 0; i < stock_array.length; i++){\r\n            total_investment += stock_array[i].price * stock_array[i].shares;\r\n            current_value += stock_array[i].asset_value * stock_array[i].shares;\r\n        }\r\n\r\n        return (\r\n            <div className=\"portfolio__\">\r\n                <div className=\"header_stats\">\r\n                    <ul>\r\n                        <li>\r\n                            <span className=\"meta\">Initial Investment:</span> <span className=\"data\">$ {total_investment.toFixed(2)}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span className=\"meta\">Current Value of Assets:</span> <span className=\"data\">$ {current_value.toFixed(2)}</span>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className=\"meta\">Value of Sold Stocks: </span> <span className=\"data\">$ {this.state.stocksSold.toFixed(2)}</span>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className=\"meta\">Wallet Value: </span> <span className=\"data\">$ {this.state.wallet.toFixed(2)}</span>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className=\"reset_btn\">\r\n                        <Button type=\"submit\" variant=\"outline-secondary\" onClick={this.onSubmitHandler}>Reset Portfolio</Button>{' '}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"stocks__\">\r\n                    {\r\n                    (this.state.stocks.length !== 0) ?\r\n                    this.state.stocks.map(\r\n                        stock => {\r\n                            return (<Stock \r\n                                        symbol={stock.symbol}\r\n                                        price={stock.price}\r\n                                        volume={stock.volume}\r\n                                        shares={stock.shares}\r\n                                        init_investment = {stock.shares * stock.price}\r\n                                        curr_value = {stock.shares * stock.asset_value}\r\n                                        date={stock.date.toString()}\r\n                                    />);\r\n                        }\r\n                        \r\n                    )\r\n                    : <Stock missing={true} />\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}