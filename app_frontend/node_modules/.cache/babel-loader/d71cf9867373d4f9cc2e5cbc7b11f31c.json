{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\home_page\\\\Purchase\\\\Purchase.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport './Purchase.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default class Purchase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.state = {\n      symbol: this.props.symbol,\n      volume: this.props.price.volume,\n      shares: 0,\n      price: this.props.price.close,\n      buy: true,\n      sell: false,\n      error: {\n        errorStatus: false,\n        errorMessage: \"\"\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.price.close !== this.state.price) {\n      this.setState({\n        price: this.props.price.close,\n        volume: this.props.price.volume,\n        symbol: this.props.symbol\n      });\n    }\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    console.log(this.state);\n    fetch('/stocktrans', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    }).then(response => response.json()).then(data => {\n      if (data.errorMessage) {\n        this.setState({\n          error: {\n            errorStatus: true,\n            errorMessage: data.errorMessage\n          }\n        });\n      }\n    }).catch(err => console.log(err));\n  }\n\n  onChangeHandler(event) {\n    this.setState({\n      buy: !this.state.buy,\n      sell: !this.state.sell\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"purchase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, this.state.error.errorStatus ? /*#__PURE__*/React.createElement(Alert, {\n      variant: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 51\n      }\n    }, \" \", this.state.error.errorMessage, \" \") : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      id: \"trans_buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Select an action: \"), /*#__PURE__*/React.createElement(Form, {\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      id: \"butts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      type: \"radio\",\n      id: \"buy\",\n      label: \"Buy\",\n      name: \"trans\" // checked={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      type: \"radio\",\n      id: \"sell\",\n      name: \"trans\",\n      label: \"Sell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Form, {\n      onChange: event => this.state.volume >= event.target.value ? this.setState({\n        shares: event.target.value\n      }) : this.setState({\n        shares: 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Enter Quantity\"), /*#__PURE__*/React.createElement(Form.Control, {\n      pattern: \"^-?[0-9]\\\\d*\\\\.?\\\\d*$\",\n      type: \"text\",\n      value: this.state.shares,\n      onChange: e => this.setState({\n        shares: e.target.value\n      }),\n      placeholder: \"Enter quantity of stocks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Total Value (US $)\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: this.state.price * this.state.shares,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Submit Transaction\"), ' ')));\n  }\n\n}\n;","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/home_page/Purchase/Purchase.js"],"names":["React","Button","Form","Alert","Purchase","Component","constructor","props","onSubmitHandler","bind","onChangeHandler","state","symbol","volume","price","shares","close","buy","sell","error","errorStatus","errorMessage","componentDidUpdate","prevProps","setState","event","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","err","render","target","value","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport './Purchase.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nexport default class Purchase extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.state = {\r\n            symbol: this.props.symbol,\r\n            volume: this.props.price.volume,\r\n            shares: 0,\r\n            price: this.props.price.close,\r\n            buy: true,\r\n            sell: false,\r\n            error: {\r\n                errorStatus: false,\r\n                errorMessage: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.price.close !== this.state.price){\r\n            this.setState({ price: this.props.price.close, volume: this.props.price.volume, symbol: this.props.symbol});\r\n        }\r\n    }\r\n\r\n    onSubmitHandler(event){\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        fetch('/stocktrans', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.errorMessage){\r\n                    this.setState({ error: {errorStatus: true, errorMessage: data.errorMessage} });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onChangeHandler(event){\r\n        this.setState({ buy: !this.state.buy, sell: !this.state.sell  });\r\n        console.log(this.state);\r\n    }\r\n\r\n      render(){\r\n          return (\r\n              <div className=\"purchase\">\r\n                  {this.state.error.errorStatus ? <Alert variant=\"warning\"> {this.state.error.errorMessage} </Alert> : null}\r\n                  <Form onSubmit={this.onSubmitHandler}>\r\n                <div className = \"inner\"id=\"trans_buttons\">\r\n                    <h3>Select an action: </h3>\r\n                    <Form onChange={this.onChangeHandler} >\r\n                        <div className = \"inner\" id=\"butts\">\r\n                            <Form.Check \r\n                                custom\r\n                                type=\"radio\"\r\n                                id=\"buy\"\r\n                                label=\"Buy\"\r\n                                name=\"trans\"\r\n                                // checked={true}\r\n                            />\r\n                            <Form.Check \r\n                                custom\r\n                                type=\"radio\"\r\n                                id=\"sell\"\r\n                                name=\"trans\"\r\n                                label=\"Sell\"\r\n                            />\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <Form onChange={event=>(this.state.volume >= event.target.value) ? this.setState({shares: event.target.value}): this.setState({ shares: 0 })}>\r\n                    <Form.Label>Enter Quantity</Form.Label>\r\n                    <Form.Control pattern=\"^-?[0-9]\\d*\\.?\\d*$\" type=\"text\" value={this.state.shares} onChange={e=>this.setState({shares: e.target.value})} placeholder=\"Enter quantity of stocks\"/>\r\n                </Form>\r\n                {/* <div className=\"select\">\r\n                    <h3>{!this.state.buy ? \"Add stocks to\" : \"Sell from\"}</h3>\r\n                        <Form.Group>\r\n                            <Form.Control as=\"select\">\r\n                                <option>portf1</option>\r\n                                <option>portf2</option>\r\n                                <option>portf3</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                </div> */}\r\n                <Form.Label>Total Value (US $)</Form.Label>\r\n                <Form.Control type=\"number\" placeholder={this.state.price * this.state.shares} readOnly />\r\n\r\n                <div className=\"sub_btn\">\r\n                    <Button type=\"submit\" variant=\"outline-secondary\">Submit Transaction</Button>{' '}\r\n                </div>\r\n                </Form>\r\n            </div>\r\n\r\n          );\r\n      }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}