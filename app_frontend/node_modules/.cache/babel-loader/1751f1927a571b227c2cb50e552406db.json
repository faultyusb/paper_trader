{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\home_page\\\\StockInfo.js\";\nimport React from 'react';\nimport StockGraph from './StockGraph.js';\nexport default class StockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: [{\n        date: new Date(\"2020-07-08\"),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: 0,\n        volume: 0\n      }, {\n        date: new Date(\"2020-07-07\"),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: 0,\n        volume: 0\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStocks();\n  }\n\n  fetchStocks() {\n    const symbol = 'AAPL';\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\n    const OUTPT_SIZE_FULL = 0 ? 'full' : 'compact';\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=${OUTPT_SIZE_FULL}&apikey=${API_KEY}`;\n    fetch(API).then(response => response.json()).then(data => {\n      for (var key in data['Time Series (Daily)']) {\n        let count = 0;\n        let temp = {};\n        temp['date'] = new Date(key);\n        temp['open'] = parseInt(data['Time Series (Daily)'][key]['1. open']);\n        temp['high'] = parseInt(data['Time Series (Daily)'][key]['2. high']);\n        temp['low'] = parseInt(data['Time Series (Daily)'][key]['3. low']);\n        temp['close'] = parseInt(data['Time Series (Daily)'][key]['4. close']);\n        temp['volume'] = parseInt(data['Time Series (Daily)'][key]['5. volume']);\n        let joined = this.state.stocks.concat(temp);\n        this.setState({\n          stocks: joined\n        });\n      }\n    }).then(() => {\n      this.setState({\n        stocks: this.state.stocks.reverse()\n      });\n      console.log(this.state.stocks);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(StockGraph, {\n      data: this.state.stocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/home_page/StockInfo.js"],"names":["React","StockGraph","StockInfo","Component","constructor","props","state","stocks","date","Date","open","high","low","close","volume","componentDidMount","fetchStocks","symbol","API_KEY","OUTPT_SIZE_FULL","API","fetch","then","response","json","data","key","count","temp","parseInt","joined","concat","setState","reverse","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport StockGraph from './StockGraph.js';\r\n\r\nexport default class StockInfo extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {stocks: [\r\n      {\r\n        date: new Date(\"2020-07-08\"),\r\n        open: 0,\r\n        high: 0,\r\n        low: 0,\r\n        close: 0,\r\n        volume: 0\r\n      },\r\n      {\r\n        date: new Date(\"2020-07-07\"), \r\n        open: 0,\r\n        high: 0,\r\n        low: 0,\r\n        close: 0,\r\n        volume: 0\r\n      },\r\n    ]};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.fetchStocks();\r\n  }\r\n\r\n  fetchStocks(){\r\n    const symbol = 'AAPL';\r\n    const API_KEY = 'TNPG40VN9O3OQ4PW';\r\n    const OUTPT_SIZE_FULL = 0 ? 'full' :'compact';\r\n    const API = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=${OUTPT_SIZE_FULL}&apikey=${API_KEY}`;\r\n\r\n    fetch(API)\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        for (var key in data['Time Series (Daily)']){\r\n          let count = 0;\r\n          let temp = {};\r\n          temp['date'] = new Date(key);\r\n          temp['open'] = parseInt(data['Time Series (Daily)'][key]['1. open']);\r\n          temp['high'] = parseInt(data['Time Series (Daily)'][key]['2. high']);\r\n          temp['low'] = parseInt(data['Time Series (Daily)'][key]['3. low']);\r\n          temp['close'] = parseInt(data['Time Series (Daily)'][key]['4. close']);\r\n          temp['volume'] = parseInt(data['Time Series (Daily)'][key]['5. volume']);\r\n\r\n          let joined = this.state.stocks.concat(temp);\r\n          this.setState({stocks: joined});\r\n        }\r\n      })\r\n        .then(()=>{\r\n          this.setState({stocks: this.state.stocks.reverse()});\r\n          console.log(this.state.stocks); \r\n        }); \r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <StockGraph data = {this.state.stocks}/>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}