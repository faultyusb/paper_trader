{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\src\\\\home_page\\\\Purchase\\\\Purchase.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport './Purchase.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default class Purchase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onSellHandler = this.onSellHandler.bind(this);\n    this.onBuyHandler = this.onBuyHandler.bind(this);\n    this.state = {\n      symbol: this.props.symbol,\n      volume: this.props.price.volume,\n      shares: 0,\n      price: this.props.price.close,\n      buy: '',\n      sell: '',\n      error: {\n        errorStatus: false,\n        errorMessage: \"\"\n      },\n      success: {\n        successStatus: false,\n        successMessage: \"\"\n      },\n      total_shares: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.price.close !== this.state.price) {\n      this.setState({\n        price: this.props.price.close,\n        volume: this.props.price.volume,\n        symbol: this.props.symbol\n      });\n      fetch('/ownedShares', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          total_shares: data.total_shares\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  onSubmitHandler(event) {\n    fetch('/stocktrans', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    }).then(response => response.json()).then(data => {\n      if (data.errorMessage) {\n        this.setState({\n          error: {\n            errorStatus: true,\n            errorMessage: data.errorMessage\n          },\n          success: {\n            successStatus: false,\n            successMessage: \"\"\n          }\n        });\n      } else if (data.successMessage) {\n        this.setState({\n          success: {\n            successStatus: true,\n            successMessage: data.successMessage\n          },\n          error: {\n            errorStatus: false,\n            errorMessage: \"\"\n          }\n        });\n      }\n    }).catch(err => console.log(err));\n\n    if (this.state.buy) {\n      const tot_shares = parseInt(this.state.total_shares) + parseInt(this.state.shares);\n      this.setState({\n        total_shares: tot_shares\n      });\n    } else {\n      let tot_shares = parseInt(this.state.total_shares) - parseInt(this.state.shares);\n      tot_shares = tot_shares >= 0 ? tot_shares : this.state.total_shares;\n      this.setState({\n        total_shares: tot_shares\n      });\n    }\n\n    this.setState({\n      shares: 0\n    });\n  }\n\n  onSellHandler() {\n    console.log(\"we selling?\");\n    this.setState({\n      sell: true,\n      buy: false\n    });\n  }\n\n  onBuyHandler() {\n    this.setState({\n      buy: true,\n      sell: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"purchase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alerts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, this.state.error.errorStatus ? /*#__PURE__*/React.createElement(Alert, {\n      variant: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 53\n      }\n    }, \" \", this.state.error.errorMessage, \" \") : null, this.state.success.successStatus ? /*#__PURE__*/React.createElement(Alert, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 57\n      }\n    }, \" \", this.state.success.successMessage, \" \") : null), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      id: \"trans_buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Select an action\"), /*#__PURE__*/React.createElement(ButtonGroup, {\n      toggle: true,\n      className: \"radio_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      type: \"checkbox\",\n      variant: \"primary\",\n      checked: this.state.buy,\n      value: \"1\",\n      onChange: this.onBuyHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Buy\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      type: \"checkbox\",\n      variant: \"primary\",\n      checked: this.state.sell,\n      value: \"1\",\n      onChange: this.onSellHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Sell\"))), /*#__PURE__*/React.createElement(Form, {\n      onChange: event => this.setState({\n        shares: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, \"Enter Quantity\"), /*#__PURE__*/React.createElement(Form.Control, {\n      pattern: \"^-?[0-9]\\\\d*\\\\.?\\\\d*$\",\n      type: \"text\",\n      value: this.state.shares,\n      onChange: e => this.setState({\n        shares: e.target.value\n      }),\n      placeholder: \"Enter quantity of stocks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, \"Total Value (US $)\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: this.state.price * parseFloat(this.state.shares),\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Shares Owned\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      placeholder: this.state.total_shares,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sub_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \"Submit Transaction\"), ' ')));\n  }\n\n}\n;","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/app_frontend/src/home_page/Purchase/Purchase.js"],"names":["React","Button","Form","Alert","ButtonGroup","ToggleButton","Purchase","Component","constructor","props","onSubmitHandler","bind","onSellHandler","onBuyHandler","state","symbol","volume","price","shares","close","buy","sell","error","errorStatus","errorMessage","success","successStatus","successMessage","total_shares","componentDidUpdate","prevProps","setState","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","err","console","log","event","tot_shares","parseInt","render","target","value","e","parseFloat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,gBAAP;AACA,OAAO,kCAAP;AAGA,eAAe,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AAIA,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM,MADV;AAETC,MAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,KAAX,CAAiBD,MAFhB;AAGTE,MAAAA,MAAM,EAAE,CAHC;AAITD,MAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAAX,CAAiBE,KAJf;AAKTC,MAAAA,GAAG,EAAE,EALI;AAMTC,MAAAA,IAAI,EAAE,EANG;AAOTC,MAAAA,KAAK,EAAE;AACHC,QAAAA,WAAW,EAAE,KADV;AAEHC,QAAAA,YAAY,EAAE;AAFX,OAPE;AAWTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,KADV;AAELC,QAAAA,cAAc,EAAE;AAFX,OAXA;AAeTC,MAAAA,YAAY,EAAE;AAfL,KAAb;AAiBH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAIA,SAAS,CAACb,KAAV,CAAgBE,KAAhB,KAA0B,KAAKL,KAAL,CAAWG,KAAzC,EAA+C;AAC3C,WAAKc,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAAX,CAAiBE,KAA1B;AAAiCH,QAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,KAAX,CAAiBD,MAA1D;AAAkED,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWM;AAArF,OAAd;AACAiB,MAAAA,KAAK,CAAC,cAAD,EAAiB;AAClBC,QAAAA,MAAM,EAAE,MADU;AAElBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFS;AAKlBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKvB,KAApB;AALY,OAAjB,CAAL,CAOKwB,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACV,aAAKV,QAAL,CAAc;AAAEH,UAAAA,YAAY,EAAEa,IAAI,CAACb;AAArB,SAAd;AACH,OAVL,EAWKc,KAXL,CAWWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXlB;AAYH;AACJ;;AAGDjC,EAAAA,eAAe,CAACoC,KAAD,EAAO;AAClBd,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBC,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFQ;AAKjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKvB,KAApB;AALW,KAAhB,CAAL,CAOKwB,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACV,UAAIA,IAAI,CAACjB,YAAT,EAAsB;AAClB,aAAKO,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAE,IAAd;AAAoBC,YAAAA,YAAY,EAAEiB,IAAI,CAACjB;AAAvC,WAAT;AAA+DC,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAE,KAAhB;AAAuBC,YAAAA,cAAc,EAAE;AAAvC;AAAxE,SAAd;AACH,OAFD,MAGK,IAAIc,IAAI,CAACd,cAAT,EAAwB;AACzB,aAAKI,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAE,IAAhB;AAAsBC,YAAAA,cAAc,EAAEc,IAAI,CAACd;AAA3C,WAAX;AAAuEL,UAAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAE,KAAd;AAAqBC,YAAAA,YAAY,EAAE;AAAnC;AAA9E,SAAd;AACH;AACJ,KAfL,EAgBKkB,KAhBL,CAgBWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBlB;;AAkBI,QAAI,KAAK7B,KAAL,CAAWM,GAAf,EAAmB;AACf,YAAM2B,UAAU,GAAGC,QAAQ,CAAC,KAAKlC,KAAL,CAAWc,YAAZ,CAAR,GAAoCoB,QAAQ,CAAC,KAAKlC,KAAL,CAAWI,MAAZ,CAA/D;AACA,WAAKa,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEmB;AAAhB,OAAd;AACH,KAHD,MAII;AACA,UAAIA,UAAU,GAAGC,QAAQ,CAAC,KAAKlC,KAAL,CAAWc,YAAZ,CAAR,GAAoCoB,QAAQ,CAAC,KAAKlC,KAAL,CAAWI,MAAZ,CAA7D;AACA6B,MAAAA,UAAU,GAAIA,UAAU,IAAI,CAAd,GAAkBA,UAAlB,GAA8B,KAAKjC,KAAL,CAAWc,YAAvD;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEmB;AAAhB,OAAd;AACH;;AACD,SAAKhB,QAAL,CAAc;AAAEb,MAAAA,MAAM,EAAE;AAAV,KAAd;AACP;;AAEDN,EAAAA,aAAa,GAAE;AACXgC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAKd,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAE,IAAR;AAAcD,MAAAA,GAAG,EAAE;AAAnB,KAAd;AACH;;AAEDP,EAAAA,YAAY,GAAE;AACV,SAAKkB,QAAL,CAAc;AAAEX,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAd;AACH;;AAIC4B,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnC,KAAL,CAAWQ,KAAX,CAAiBC,WAAjB,gBAA+B,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B,KAAKT,KAAL,CAAWQ,KAAX,CAAiBE,YAA5C,MAA/B,GAAoG,IADzG,EAEK,KAAKV,KAAL,CAAWW,OAAX,CAAmBC,aAAnB,gBAAmC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2B,KAAKZ,KAAL,CAAWW,OAAX,CAAmBE,cAA9C,MAAnC,GAA4G,IAFjH,CADF,eAKE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKjB,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAwB,MAAA,EAAE,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGI,oBAAC,WAAD;AAAa,MAAA,MAAM,MAAnB;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAC,SAFZ;AAGI,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWM,GAHxB;AAII,MAAA,KAAK,EAAC,GAJV;AAKI,MAAA,QAAQ,EAAI,KAAKP,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAWI,oBAAC,YAAD;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,OAAO,EAAC,SAFR;AAGA,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWO,IAHpB;AAIA,MAAA,KAAK,EAAC,GAJN;AAKA,MAAA,QAAQ,EAAI,KAAKT,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CAHJ,CADJ,eAkDI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEkC,KAAK,IAAG,KAAKf,QAAL,CAAc;AAACb,QAAAA,MAAM,EAAE4B,KAAK,CAACI,MAAN,CAAaC;AAAtB,OAAd,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,OAAO,EAAC,uBAAtB;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAuD,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWI,MAAzE;AAAiF,MAAA,QAAQ,EAAEkC,CAAC,IAAE,KAAKrB,QAAL,CAAc;AAACb,QAAAA,MAAM,EAAEkC,CAAC,CAACF,MAAF,CAASC;AAAlB,OAAd,CAA9F;AAAuI,MAAA,WAAW,EAAC,0BAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAlDJ,eAuDI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAvDJ,eAwDI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,WAAW,EAAE,KAAKrC,KAAL,CAAWG,KAAX,GAAmBoC,UAAU,CAAC,KAAKvC,KAAL,CAAWI,MAAZ,CAAtE;AAA2F,MAAA,QAAQ,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxDJ,eA0DI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1DJ,eA2DI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWc,YAApD;AAAkE,MAAA,QAAQ,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DJ,eA6DI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EACkF,GADlF,CA7DJ,CALF,CADJ;AA0EH;;AArK8C;AAsKpD","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nimport './Purchase.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nexport default class Purchase extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n\r\n        this.onSellHandler = this.onSellHandler.bind(this);\r\n        this.onBuyHandler = this.onBuyHandler.bind(this);\r\n\r\n\r\n\r\n        this.state = {\r\n            symbol: this.props.symbol,\r\n            volume: this.props.price.volume,\r\n            shares: 0,\r\n            price: this.props.price.close,\r\n            buy: '',\r\n            sell: '',\r\n            error: {\r\n                errorStatus: false,\r\n                errorMessage: \"\"\r\n            },\r\n            success: {\r\n                successStatus: false,\r\n                successMessage: \"\"\r\n            },\r\n            total_shares: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.price.close !== this.state.price){\r\n            this.setState({ price: this.props.price.close, volume: this.props.price.volume, symbol: this.props.symbol});\r\n            fetch('/ownedShares', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({ total_shares: data.total_shares });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n \r\n    onSubmitHandler(event){\r\n        fetch('/stocktrans', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.errorMessage){\r\n                    this.setState({ error: {errorStatus: true, errorMessage: data.errorMessage}, success: {successStatus: false, successMessage: \"\"} });\r\n                }\r\n                else if (data.successMessage){\r\n                    this.setState({ success: {successStatus: true, successMessage: data.successMessage}, error: {errorStatus: false, errorMessage: \"\"} });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n            if (this.state.buy){\r\n                const tot_shares = parseInt(this.state.total_shares) + parseInt(this.state.shares);\r\n                this.setState({ total_shares: tot_shares });\r\n            }\r\n            else{ \r\n                let tot_shares = parseInt(this.state.total_shares) - parseInt(this.state.shares);\r\n                tot_shares = (tot_shares >= 0 ? tot_shares: this.state.total_shares);\r\n                this.setState({ total_shares: tot_shares });\r\n            }\r\n            this.setState({ shares: 0 });\r\n    }\r\n\r\n    onSellHandler(){\r\n        console.log(\"we selling?\");\r\n        this.setState({ sell: true, buy: false });\r\n    }\r\n\r\n    onBuyHandler(){\r\n        this.setState({ buy: true, sell: false });\r\n    }\r\n\r\n\r\n\r\n      render(){\r\n          return (\r\n              <div className=\"purchase\">\r\n                <div className=\"alerts\">\r\n                    {this.state.error.errorStatus ? <Alert variant=\"warning\"> {this.state.error.errorMessage} </Alert> : null}\r\n                    {this.state.success.successStatus ? <Alert variant=\"primary\"> {this.state.success.successMessage} </Alert> : null}\r\n                </div>\r\n                <Form onSubmit={this.onSubmitHandler}>\r\n                    <div className = \"inner\"id=\"trans_buttons\">\r\n                        <h3>Select an action</h3>\r\n\r\n                        <ButtonGroup toggle className=\"radio_btn\">\r\n                            <ToggleButton\r\n                                type=\"checkbox\"\r\n                                variant=\"primary\"\r\n                                checked={this.state.buy}\r\n                                value=\"1\"\r\n                                onChange = {this.onBuyHandler}\r\n                            >\r\n                                Buy\r\n                            </ToggleButton>\r\n\r\n                            <ToggleButton\r\n                            type=\"checkbox\"\r\n                            variant=\"primary\"\r\n                            checked={this.state.sell}\r\n                            value=\"1\"\r\n                            onChange = {this.onSellHandler}\r\n                            >\r\n                                Sell\r\n                            </ToggleButton>\r\n\r\n                        </ButtonGroup>\r\n\r\n\r\n\r\n                        {/* <Form className=\"yeet\">\r\n                            <div className = \"radio_btn\">\r\n                                <Form.Check \r\n                                    custom\r\n                                    type=\"radio\"\r\n                                    id=\"buy\"\r\n                                    label=\"Buy\"\r\n                                    name=\"trans\"\r\n                                    onChange = {this.onBuyHandler}\r\n                                />\r\n                                <Form.Check \r\n                                    custom\r\n                                    type=\"radio\"\r\n                                    id=\"sell\"\r\n                                    name=\"trans\"\r\n                                    label=\"Sell\"\r\n                                    onChange = {this.onSellHandler}\r\n                                />\r\n                            </div>\r\n                        </Form> */}\r\n                    </div>\r\n                    <Form onChange={event=> this.setState({shares: event.target.value})}>\r\n                        <Form.Label>Enter Quantity</Form.Label>\r\n                        <Form.Control pattern=\"^-?[0-9]\\d*\\.?\\d*$\" type=\"text\" value={this.state.shares} onChange={e=>this.setState({shares: e.target.value})} placeholder=\"Enter quantity of stocks\"/>\r\n                    </Form>\r\n                    \r\n                    <Form.Label>Total Value (US $)</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder={this.state.price * parseFloat(this.state.shares)} readOnly />\r\n\r\n                    <Form.Label>Shares Owned</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder={this.state.total_shares} readOnly />\r\n\r\n                    <div className=\"sub_btn\">\r\n                        <Button type=\"submit\" variant=\"outline-secondary\">Submit Transaction</Button>{' '}\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n\r\n          );\r\n      }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}