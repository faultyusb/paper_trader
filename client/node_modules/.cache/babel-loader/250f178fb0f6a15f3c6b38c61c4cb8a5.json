{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\app_frontend\\\\src\\\\portfolio\\\\portfolio.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Stock from './Stock';\nimport './portfolio.css';\nexport default class portfolio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.state = {\n      notLoggedIn: true,\n      stocks: [],\n      wallet: 0,\n      stocksSold: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('/updateStocks', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      // user is logged in\n      if (!data.errorMessage) {\n        this.setState({\n          notLoggedIn: false,\n          stocks: data.stocks,\n          wallet: data.wallet,\n          stocksSold: data.stocksSold\n        });\n      }\n    });\n  }\n\n  onSubmitHandler() {\n    this.setState({\n      stocks: [],\n      wallet: 0,\n      stocksSold: 0\n    });\n    fetch('/resetPort').then(response => response.json()).then(data => {\n      if (data.errorMessage) {\n        console.log(data.errorMessage);\n      }\n    });\n  }\n\n  render() {\n    if (this.state.notLoggedIn) {\n      return /*#__PURE__*/React.createElement(Stock, {\n        isLoggedIn: this.state.notLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      });\n    }\n\n    let total_investment = 0;\n    let current_value = 0;\n    const stock_array = this.state.stocks;\n\n    for (let i = 0; i < stock_array.length; i++) {\n      total_investment += stock_array[i].price * stock_array[i].shares;\n      current_value += stock_array[i].asset_value * stock_array[i].shares;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolio__\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header_stats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Initial Investment:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 79\n      }\n    }, \"$ \", total_investment.toFixed(2))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Current Value of Assets:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 84\n      }\n    }, \"$ \", current_value.toFixed(2))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Value of Sold Stocks: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 82\n      }\n    }, \"$ \", this.state.stocksSold.toFixed(2))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Wallet Value: \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 74\n      }\n    }, \"$ \", this.state.wallet.toFixed(2)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reset_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-secondary\",\n      onClick: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Reset Portfolio\"), ' ')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stocks__\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, this.state.stocks.length !== 0 ? this.state.stocks.map(stock => {\n      return /*#__PURE__*/React.createElement(Stock, {\n        symbol: stock.symbol,\n        price: stock.price,\n        volume: stock.volume,\n        shares: stock.shares,\n        init_investment: stock.shares * stock.price,\n        curr_value: stock.shares * stock.asset_value,\n        date: stock.date.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      });\n    }) : /*#__PURE__*/React.createElement(Stock, {\n      missing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/app_frontend/src/portfolio/portfolio.js"],"names":["React","Button","Stock","portfolio","Component","constructor","props","onSubmitHandler","bind","state","notLoggedIn","stocks","wallet","stocksSold","componentDidMount","fetch","method","headers","then","response","json","data","errorMessage","setState","console","log","render","total_investment","current_value","stock_array","i","length","price","shares","asset_value","toFixed","map","stock","symbol","volume","date","toString"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Stock from './Stock';\r\n\r\nimport './portfolio.css';\r\n\r\n\r\nexport default class portfolio extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.state = {\r\n            notLoggedIn: true,\r\n            stocks: [],\r\n            wallet : 0,\r\n            stocksSold: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/updateStocks', {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n            .then(response => response.json())\r\n                .then(data=>{\r\n                    // user is logged in\r\n                    if (!data.errorMessage){\r\n                        this.setState(\r\n                            {notLoggedIn: false,\r\n                            stocks: data.stocks,\r\n                            wallet: data.wallet,\r\n                            stocksSold: data.stocksSold\r\n                        \r\n                        });\r\n                    }\r\n                    });\r\n\r\n    }\r\n\r\n    onSubmitHandler(){\r\n        this.setState({\r\n            stocks: [],\r\n            wallet: 0,\r\n            stocksSold: 0\r\n        });\r\n\r\n        fetch('/resetPort')\r\n            .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.errorMessage){\r\n                        console.log(data.errorMessage);\r\n                    }\r\n                });\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.state.notLoggedIn){\r\n            return <Stock isLoggedIn = {this.state.notLoggedIn} />\r\n        }\r\n\r\n        let total_investment = 0;\r\n        let current_value = 0;\r\n        const stock_array = this.state.stocks;\r\n        for (let i = 0; i < stock_array.length; i++){\r\n            total_investment += stock_array[i].price * stock_array[i].shares;\r\n            current_value += stock_array[i].asset_value * stock_array[i].shares;\r\n        }\r\n\r\n        return (\r\n            <div className=\"portfolio__\">\r\n                <div className=\"header_stats\">\r\n                    <ul>\r\n                        <li>\r\n                            <span className=\"meta\">Initial Investment:</span> <span className=\"data\">$ {total_investment.toFixed(2)}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span className=\"meta\">Current Value of Assets:</span> <span className=\"data\">$ {current_value.toFixed(2)}</span>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className=\"meta\">Value of Sold Stocks: </span> <span className=\"data\">$ {this.state.stocksSold.toFixed(2)}</span>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <span className=\"meta\">Wallet Value: </span> <span className=\"data\">$ {this.state.wallet.toFixed(2)}</span>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className=\"reset_btn\">\r\n                        <Button type=\"submit\" variant=\"outline-secondary\" onClick={this.onSubmitHandler}>Reset Portfolio</Button>{' '}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"stocks__\">\r\n                    {\r\n                    (this.state.stocks.length !== 0) ?\r\n                    this.state.stocks.map(\r\n                        stock => {\r\n                            return (<Stock \r\n                                        symbol={stock.symbol}\r\n                                        price={stock.price}\r\n                                        volume={stock.volume}\r\n                                        shares={stock.shares}\r\n                                        init_investment = {stock.shares * stock.price}\r\n                                        curr_value = {stock.shares * stock.asset_value}\r\n                                        date={stock.date.toString()}\r\n                                    />);\r\n                        }\r\n                        \r\n                    )\r\n                    : <Stock missing={true} />\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}