{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJS\\\\paper-trading-app\\\\src\\\\portfolio\\\\portfolio.js\";\nimport React from 'react';\nimport Stock from './Stock';\nimport './portfolio.css';\nexport default class portfolio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockAmount: 5,\n      stocks: [{\n        symbol: \"FB\",\n        price: 10,\n        volume: 100,\n        quantity: 500,\n        purchased_value: 5000,\n        date: new Date()\n      }, {\n        symbol: \"AMZN\",\n        price: 100,\n        volume: 10,\n        quantity: 200,\n        purchased_value: 8000,\n        date: new Date()\n      }, {\n        symbol: \"AAPL\",\n        price: 50,\n        volume: 10,\n        quantity: 72,\n        purchased_value: 10000,\n        date: new Date()\n      }]\n    };\n  }\n\n  render() {\n    let total_val = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Total Value of Assets: \", () => {\n      let total_value = 0;\n      this.state.stocks.forEach(stock => total_value += stock.purchased_value);\n      return total_value;\n    }), this.state.stocks.map(stock => {\n      return /*#__PURE__*/React.createElement(Stock, {\n        symbol: stock.symbol,\n        price: stock.price,\n        volume: stock.volume,\n        quantity: stock.quantity,\n        purchased: stock.purchased_value // date={stock.date}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/reactJS/paper-trading-app/src/portfolio/portfolio.js"],"names":["React","Stock","portfolio","Component","constructor","props","state","stockAmount","stocks","symbol","price","volume","quantity","purchased_value","date","Date","render","total_val","total_value","forEach","stock","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,iBAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,MAAM,EAAE,CACJ;AACIC,QAAAA,MAAM,EAAE,IADZ;AAEIC,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,MAAM,EAAE,GAHZ;AAIIC,QAAAA,QAAQ,EAAE,GAJd;AAKIC,QAAAA,eAAe,EAAE,IALrB;AAMIC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AANV,OADI,EASJ;AACIN,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,KAAK,EAAE,GAFX;AAGIC,QAAAA,MAAM,EAAE,EAHZ;AAIIC,QAAAA,QAAQ,EAAE,GAJd;AAKIC,QAAAA,eAAe,EAAE,IALrB;AAMIC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AANV,OATI,EAiBJ;AACIN,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,KAAK,EAAE,EAFX;AAGIC,QAAAA,MAAM,EAAE,EAHZ;AAIIC,QAAAA,QAAQ,EAAE,EAJd;AAKIC,QAAAA,eAAe,EAAE,KALrB;AAMIC,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AANV,OAjBI;AAFC,KAAb;AA6BH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,SAAS,GAAG,CAAhB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA4B,MAAM;AAC9B,UAAIC,WAAW,GAAG,CAAlB;AACA,WAAKZ,KAAL,CAAWE,MAAX,CAAkBW,OAAlB,CAA0BC,KAAK,IAAIF,WAAW,IAAIE,KAAK,CAACP,eAAxD;AACA,aAAOK,WAAP;AACH,KAJD,CADJ,EAOK,KAAKZ,KAAL,CAAWE,MAAX,CAAkBa,GAAlB,CACGD,KAAK,IAAI;AACL,0BAAO,oBAAC,KAAD;AACK,QAAA,MAAM,EAAEA,KAAK,CAACX,MADnB;AAEK,QAAA,KAAK,EAAEW,KAAK,CAACV,KAFlB;AAGK,QAAA,MAAM,EAAEU,KAAK,CAACT,MAHnB;AAIK,QAAA,QAAQ,EAAES,KAAK,CAACR,QAJrB;AAKK,QAAA,SAAS,EAAIQ,KAAK,CAACP,eALxB,CAMK;AANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAQH,KAVJ,CAPL,CADJ;AAsBH;;AA1DiD","sourcesContent":["import React from 'react';\r\n\r\nimport Stock from './Stock';\r\n\r\nimport './portfolio.css';\r\n\r\n\r\nexport default class portfolio extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            stockAmount: 5,\r\n            stocks: [\r\n                {\r\n                    symbol: \"FB\",\r\n                    price: 10,\r\n                    volume: 100,\r\n                    quantity: 500,\r\n                    purchased_value: 5000,\r\n                    date: new Date()\r\n                },\r\n                {\r\n                    symbol: \"AMZN\",\r\n                    price: 100,\r\n                    volume: 10,\r\n                    quantity: 200,\r\n                    purchased_value: 8000,\r\n                    date: new Date()\r\n                },\r\n                {\r\n                    symbol: \"AAPL\",\r\n                    price: 50,\r\n                    volume: 10,\r\n                    quantity: 72,\r\n                    purchased_value: 10000,\r\n                    date: new Date()\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    render(){\r\n        let total_val = 0;\r\n        return (\r\n            <div>\r\n                <h1>Total Value of Assets: {() => {\r\n                    let total_value = 0;\r\n                    this.state.stocks.forEach(stock => total_value += stock.purchased_value);\r\n                    return total_value;\r\n                }}</h1>\r\n\r\n                {this.state.stocks.map(\r\n                    stock => {\r\n                        return <Stock \r\n                                    symbol={stock.symbol}\r\n                                    price={stock.price}\r\n                                    volume={stock.volume}\r\n                                    quantity={stock.quantity}\r\n                                    purchased = {stock.purchased_value}\r\n                                    // date={stock.date}\r\n                                />\r\n                    }\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}